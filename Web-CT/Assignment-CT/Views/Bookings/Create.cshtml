@model Assignment_CT.Models.BookingViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

<div class="row">
    <div class="col-md-4">

        @using (Html.BeginForm("Create", "Bookings", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Booking</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.Booking.DoctorId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Booking.DoctorId, (SelectList)ViewBag.Doctors, "Select a Doctor", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Booking.DoctorId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Booking.AppointmentDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Booking.AppointmentDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Booking.AppointmentDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Booking.EventId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Booking.EventId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Booking.EventId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Booking.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Booking.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Booking.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Booking.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Booking.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Booking.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Booking.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Booking.Description, new { @class = "form-control", rows = "10" })
                        @Html.ValidationMessageFor(model => model.Booking.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Booking.ImageUpload, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="file" name="Booking.ImageUpload" id="ImageUpload" class="form-control" />
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
        <div class="col-md-8">
            <div id="doctorEventsCalendar"></div>

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>

        </div>
</div>

    @section Scripts {
        @Scripts.Render("~/bundles/datetimepicker")
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/bundles/calendar")
        <script type="text/javascript">

            $(document).ready(function () {
                // Initialize the calendar
                $('#doctorEventsCalendar').fullCalendar({
                    defaultValue: 'month',
                    contentHeight: 600,
                    businessHours: true,
                    timeFormat: 'h(:mm)a',
                    header: {
                        left: "month,agendaWeek, today",
                        center: "title",
                        right: "prevYear, prev,next, nextYear"
                    },
                    events: function (start, end, timezone, callback) {
                        var selectedDoctorId = $('#Booking_DoctorId').val();
                        if (selectedDoctorId) {
                            var events = [];
                            $.ajax({
                                url: '/Bookings/GetDoctorEvents',
                                dataType: 'json',
                                data: {
                                    doctorId: selectedDoctorId
                                },
                                success: function (doc) {
                                    var events = [];
                                    $(doc).each(function () {
                                        if (this.start && this.end) {
                                            var e = {
                                                eventId: this.id,
                                                start: moment(this.start).format("YYYY-MM-DDTHH:mm:ss"),
                                                end: moment(this.end).format("YYYY-MM-DDTHH:mm:ss"),
                                                isBooked: this.isBooked
                                            };

                                            // Set the color based on the event start time
                                            if (moment(this.start) < Date.now()) {
                                                e.color = "#666666";
                                            } else if (this.isBooked) {
                                                 e.color = "#333333";
                                            } else {
                                                 e.color = "#002288";
                                            }
                                            events.push(e)
                                        }
                                    });
                                    callback(events);
                                    console.log(events);
                                }
                            });
                        }
                    },
                    eventClick: function (event) {
                        if (moment(event.start) < Date.now()) {
                            alert("unable to book past event")
                        } else if (event.isBooked) {
                            alert("this time is booked")
                        } else {
                            $('#Booking_AppointmentDate').val(moment(event.start).format('MM/DD/YYYY HH:mm'));
                            $('#Booking_EventId').val(event.eventId);
                        }
                    }
                });

                // Re-fetch events when the doctor dropdown changes
                $('#Booking_DoctorId').change(function () {
                    $('#doctorEventsCalendar').fullCalendar('refetchEvents');
                });
            });

        </script>
    }
